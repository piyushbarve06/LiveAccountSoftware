DEBUG LOG STARTED: 2025-09-28 08:33:07
private function build_customer_xml($customer)
    {
        $xml = $this->get_xml_header();

        $ledgerName = !empty($customer->company) ? $customer->company : "Unnamed Ledger";

        $xml .= '<BODY>';
        $xml .= '<IMPORTDATA>';
        $xml .= '<REQUESTDESC>';
        $xml .= '<REPORTNAME>All Masters</REPORTNAME>';
        $xml .= '</REQUESTDESC>';
        $xml .= '<REQUESTDATA>';
        $xml .= '<TALLYMESSAGE xmlns:UDF="TallyUDF">';

        $xml .= '<LEDGER ACTION="Create">';

        $xml .= '<NAME>' . htmlspecialchars($ledgerName, ENT_XML1, 'UTF-8') . '</NAME>';
        // Parent group
        $xml .= '<PARENT>Sundry Debtors</PARENT>';

        // Basic flags
        $xml .= '<ISBILLWISEON>Yes</ISBILLWISEON>';
        $xml .= '<AFFECTSSTOCK>No</AFFECTSSTOCK>';

        // GSTIN and Registration Type
        $vat = htmlspecialchars($customer->vat, ENT_XML1, 'UTF-8');

        $xml .= '<GSTREGISTRATIONTYPE>Regular</GSTREGISTRATIONTYPE>';
        $xml .= '<PARTYGSTIN>'.$vat.'</PARTYGSTIN>';
        // GSTIN validation
        // Address list (address, city, state, country, pincode)

        if (!empty($customer->address)) {
            $xml .= '<ADDRESS.LIST TYPE="String">';
            $xml .= '<ADDRESS>' . htmlspecialchars($customer->address, ENT_XML1, 'UTF-8') . '</ADDRESS>';
            $xml .= '</ADDRESS.LIST>';
        }

        // State, Country, and Pincode
        if (!empty($customer->state)) {
            $xml .= '<LEDSTATENAME>' . htmlspecialchars($customer->state, ENT_QUOTES, 'UTF-8') . '</LEDSTATENAME>';
        }

        if (!empty($customer->country)) {
            $this->CI->db->select('*');
            $countries = $this->CI->db->get(db_prefix() . 'countries')->result_array();
            $this->CI->db->where('country_id', $customer->country);
            $country = $this->CI->db->get(db_prefix() . 'countries')->row();
            $xml .= '<COUNTRYNAME>' . htmlspecialchars($country->short_name, ENT_QUOTES, 'UTF-8') . '</COUNTRYNAME>';
        }

        if (!empty($customer->zip)) {
            $xml .= '<PINCODE>' . htmlspecialchars($customer->zip, ENT_QUOTES, 'UTF-8') . '</PINCODE>';
        }

        // Phone and Mobile
        if (!empty($customer->phonenumber)) {
            $phone = htmlspecialchars($customer->phonenumber, ENT_XML1, 'UTF-8');
            $xml .= '<LEDGERPHONE>' . $phone . '</LEDGERPHONE>';
            $xml .= '<LEDGERMOBILE>' . $phone . '</LEDGERMOBILE>';
        }

        // Email
        if (!empty($customer->email)) {
            $xml .= '<EMAIL>' . htmlspecialchars($customer->email, ENT_XML1, 'UTF-8') . '</EMAIL>';
        }

        // Language List
        $xml .= '<LANGUAGENAME.LIST>';
        $xml .= '<NAME.LIST TYPE="String">';
        $xml .= '<NAME>' . htmlspecialchars($ledgerName, ENT_XML1, 'UTF-8') . '</NAME>';
        $xml .= '</NAME.LIST>';
        $xml .= '<LANGUAGEID>1033</LANGUAGEID>';
        $xml .= '</LANGUAGENAME.LIST>';

        $xml .= '</LEDGER>';
        $xml .= '</TALLYMESSAGE>';
        $xml .= '</REQUESTDATA>';
        $xml .= '</IMPORTDATA>';
        $xml .= '</BODY>';
        $xml .= '</ENVELOPE>';

        return $xml;
    }